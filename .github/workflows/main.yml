name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  ubuntu-build:
    runs-on: ubuntu-latest
    name: Ubuntu Build
    if: 1 != 1
    steps:
    - name: Setup node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.4
    - name: Setup clang
      run: |
        sudo add-apt-repository 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main'
        sudo apt update
        sudo apt install clang-10 clang-tidy-10
    - name: Setup env
      run: |
        echo "::set-env name=CLANG_BIN::clang-10"
        echo "::set-env name=CLANG_TIDY_BIN::clang-tidy-10"
    - name: Setup graphical drivers
      run: |
        sudo apt install mesa-common-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev
    - name: Print versions
      run: |
        echo "Node:"
        node -v
        echo ""
        echo "npm:"
        npm -v
        echo ""
        echo "clang:"
        $(CLANG_BIN) --version
        echo ""
        echo "clang-tidy:"
        $(CLANG_TIDY_BIN) --version
        echo ""
        echo "make:"
        make -v
        echo ""
    - uses: actions/checkout@v2
    - name: Setup
      run: make setup
    - name: Build
      run: make
  macos-build:
    runs-on: macos-10.14
    name: MacOS Build
    steps:
    - name: Find stdio.h
      run: |
        find / -name 'stdio.h' -type f 2> /dev/null
    - name: Install macOS headers
      run: |
        ls -al /Library || echo not found
        ls -al /Library/Developer || echo not found
        ls -al /Library/Developer/CommandLineTools || echo not found
        ls -al /Library/Developer/CommandLineTools/Packages || echo not found
        open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg
    - name: Setup node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.4
    - name: Setup clang
      run: |
        mkdir $HOME/clang
        wget -cqO- https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.0/clang+llvm-10.0.0-x86_64-apple-darwin.tar.xz | tar xJC $HOME/clang --strip-components 1
        ls -al $HOME/clang
        echo "::set-env name=CLANG_BIN::$HOME/clang/bin/clang"
        echo "::set-env name=CLANG_TIDY_BIN::$HOME/clang/bin/clang-tidy"
    - name: Print Versions
      run: |
        echo "Node:"
        node -v
        echo ""
        echo "npm:"
        npm -v
        echo ""
        echo "clang:"
        $CLANG_BIN --version
        echo ""
        echo "clang-tidy:"
        $CLANG_TIDY_BIN --version
        echo ""
        echo "make:"
        make -v
        echo ""
    - uses: actions/checkout@v2
    - name: Setup
      run: |
        ls -al
        make setup
        ls -al
    - name: Build
      run: |
        make
        ls -al build
